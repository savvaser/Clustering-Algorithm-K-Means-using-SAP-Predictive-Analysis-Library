--Dropping all the table types, views and procedures in case they are already created earlier and contains data.

DROP TYPE "T_DATA";
DROP TYPE "T_PARAMS";
DROP TYPE "T_RESULTS";
DROP TYPE "T_CENTERS";
DROP TYPE "T_CENTERSTATS";
DROP TYPE "T_STATS";
DROP TYPE "T_MODEL";
DROP TABLE "SIGNATURE";
CALL "SYS"."AFLLANG_WRAPPER_PROCEDURE_DROP"('PAL', 'P_KMEANS');
DROP VIEW "V_DATA";
DROP TABLE "#PARAMS";
DROP TABLE "RESULTS";
DROP TABLE "CENTERS";
DROP TABLE "CENTERSTATS";
DROP TABLE "STATS";
DROP TABLE "MODEL";
DROP VIEW "RESULTS_VIEW";

-- Procedure setup
CREATE TYPE "T_DATA" AS TABLE ("ID" INTEGER, "LIFESPEND" DOUBLE, "NEWSPEND" DOUBLE, "INCOME" DOUBLE, "LOYALTY" DOUBLE);
CREATE TYPE "T_PARAMS" AS TABLE ("NAME" VARCHAR(60), "INTARGS" INTEGER, "DOUBLEARGS" DOUBLE, "STRINGARGS" VARCHAR(100));
CREATE TYPE "T_RESULTS" AS TABLE ("ID" INTEGER, "CLUSTER_NUMBER" INTEGER, "DISTANCE" DOUBLE, "ESTIMATED" DOUBLE);
CREATE TYPE "T_CENTERS" AS TABLE ("CENTER_ID" INTEGER, "LIFESPEND" DOUBLE, "NEWSPEND" DOUBLE, "INCOME" DOUBLE, "LOYALTY" DOUBLE);
CREATE TYPE "T_CENTERSTATS" AS TABLE ("CENTER_ID" INTEGER, "VALUE" DOUBLE);
CREATE TYPE "T_STATS" AS TABLE ("NAME" VARCHAR(100), "VALUE" DOUBLE);
CREATE TYPE "T_MODEL" AS TABLE ("ID" INTEGER, "MODEL" VARCHAR(5000));

--Creating the signature table
CREATE COLUMN TABLE "SIGNATURE" ("POSITION" INTEGER, "SCHEMA_NAME" NVARCHAR(256), "TYPE_NAME" NVARCHAR(256), "PARAMETER_TYPE" VARCHAR(7));
INSERT INTO "SIGNATURE" VALUES (1, 'PAL', 'T_DATA', 'IN');
INSERT INTO "SIGNATURE" VALUES (2, 'PAL', 'T_PARAMS', 'IN');
INSERT INTO "SIGNATURE" VALUES (3, 'PAL', 'T_RESULTS', 'OUT');
INSERT INTO "SIGNATURE" VALUES (4, 'PAL', 'T_CENTERS', 'OUT');
INSERT INTO "SIGNATURE" VALUES (5, 'PAL', 'T_CENTERSTATS', 'OUT');
INSERT INTO "SIGNATURE" VALUES (6, 'PAL', 'T_STATS', 'OUT');
INSERT INTO "SIGNATURE" VALUES (7, 'PAL', 'T_MODEL', 'OUT');

--Creating a new procedure by calling the KMEANS function
CALL "SYS"."AFLLANG_WRAPPER_PROCEDURE_CREATE"('AFLPAL', 'KMEANS', 'PAL', 'P_KMEANS', "SIGNATURE");

--View setup
CREATE VIEW "V_DATA" AS 
	SELECT "ID", "LIFESPEND", "NEWSPEND", "INCOME", "LOYALTY"
		FROM "PAL"."CUSTOMERS";

--Creating all the required tables
CREATE COLUMN TABLE "RESULTS" LIKE "T_RESULTS";
CREATE COLUMN TABLE "CENTERS" LIKE "T_CENTERS";
CREATE COLUMN TABLE "CENTERSTATS" LIKE "T_CENTERSTATS";
CREATE COLUMN TABLE "STATS" LIKE "T_STATS";
CREATE COLUMN TABLE "MODEL" LIKE "T_MODEL";

--Creating Parameter tables by specifying the parameters required by the K-Means algorithm

CREATE LOCAL TEMPORARY COLUMN TABLE "#PARAMS" LIKE "T_PARAMS";
--INSERT INTO "#PARAMS" VALUES ('GROUP_NUMBER', 3, null, null);
INSERT INTO "#PARAMS" VALUES ('GROUP_NUMBER_MIN', 2, null, null);
INSERT INTO "#PARAMS" VALUES ('GROUP_NUMBER_MAX', 10, null, null);
INSERT INTO "#PARAMS" VALUES ('INIT_TYPE', 4, null, null);
INSERT INTO "#PARAMS" VALUES ('DISTANCE_LEVEL', 2, null, null);
INSERT INTO "#PARAMS" VALUES ('MAX_ITERATION', 100, null, null);
INSERT INTO "#PARAMS" VALUES ('NORMALIZATION', 0, null, null);
INSERT INTO "#PARAMS" VALUES ('EXIT_THRESHOLD', null, 0.0001, null);
INSERT INTO "#PARAMS" VALUES ('THREAD_NUMBER', 2, null, null);

--Customizing the output view
CREATE VIEW "RESULTS_VIEW" AS
	SELECT c.ID,r.cluster_number,c.CUSTOMER,c.NEWSPEND,c.LIFESPEND,c.INCOME,c.LOYALTY FROM CUSTOMERS c, RESULTS r
	WHERE c.ID=r.ID;

--Making sure that the tables are empty before running the algorithm
TRUNCATE TABLE "RESULTS";
TRUNCATE TABLE "CENTERS";
TRUNCATE TABLE "CENTERSTATS";
TRUNCATE TABLE "STATS";
TRUNCATE TABLE "MODEL";

--Calling the procedure created earlier
CALL "P_KMEANS" ("V_DATA", "#PARAMS", "RESULTS", "CENTERS", "CENTERSTATS", "STATS", "MODEL") WITH OVERVIEW;

--View the results
SELECT * FROM "RESULTS";
SELECT * FROM "CENTERS";
SELECT * FROM "CENTERSTATS";
SELECT * FROM "STATS";
SELECT * FROM "MODEL";
SELECT * FROM "RESULTS_VIEW";
